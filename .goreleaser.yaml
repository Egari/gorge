---
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

nfpms:
  - homepage: https://github.com/dadav/gorge
    maintainer: dadav <dadav@protonmail.com>
    description: |-
      Gorge is a puppet forge implementation in go.
    license: Apache 2.0
    formats:
      - apk
      - deb
      - rpm
      - termux.deb
      - archlinux
    provides:
      - gorge
    contents:
      - src: gorge.service
        dst: /usr/lib/systemd/system/gorge.service
      - src: defaults.yaml
        dst: /etc/gorge.yaml
        type: "config|noreplace"

dockers:
  - goos: linux
    goarch: amd64
    image_templates:
      - 'ghcr.io/dadav/gorge:{{ .Tag }}'
      - 'ghcr.io/dadav/gorge:latest'
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.authors=dadav"
      - "--label=org.opencontainers.image.url=https://github.com/dadav/gorge"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^Merge'
